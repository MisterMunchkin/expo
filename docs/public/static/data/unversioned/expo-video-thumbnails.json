{"name":"expo-video-thumbnails","variant":"project","kind":1,"children":[{"name":"NativeVideoThumbnail","variant":"declaration","kind":128,"comment":{"summary":[{"kind":"text","text":"Represents a video thumbnail that references a native image.\nInstances of this class can be passed as a source to the "},{"kind":"code","text":"`Image`"},{"kind":"text","text":" component from "},{"kind":"code","text":"`expo-image`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"android"}]},{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"children":[{"name":"constructor","variant":"declaration","kind":512,"signatures":[{"name":"NativeVideoThumbnail","variant":"signature","kind":16384,"comment":{"summary":[{"kind":"text","text":"Creates a new event emitter instance."}]},"type":{"type":"reference","name":"NativeVideoThumbnail","package":"expo-video-thumbnails"},"inheritedFrom":{"type":"reference","name":"SharedRef<'image'>.constructor"}}],"inheritedFrom":{"type":"reference","name":"SharedRef<'image'>.constructor"}},{"name":"actualTime","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The time in seconds at which the thumbnail was actually generated."}],"blockTags":[{"tag":"@platform","content":[{"kind":"text","text":"ios"}]}]},"type":{"type":"intrinsic","name":"number"}},{"name":"height","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Height of the created thumbnail."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"nativeRefType","variant":"declaration","kind":1024,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"The type of the native reference."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"SharedRef.nativeRefType"}},{"name":"requestedTime","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"The time in seconds at which the thumbnail was to be created."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"width","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Width of the created thumbnail."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"addListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"addListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Adds a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","target":{"qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"}}}],"type":{"type":"reference","target":{"qualifiedName":"EventSubscription"},"name":"EventSubscription","package":"expo-modules-core"},"inheritedFrom":{"type":"reference","name":"SharedRef.addListener"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.addListener"}},{"name":"emit","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"emit","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Synchronously calls all the listeners attached to that specific event.\nThe event can include any number of arguments that will be passed to the listeners."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"args","variant":"param","kind":32768,"flags":{"isRest":true},"type":{"type":"reference","target":{"qualifiedName":"Parameters"},"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","target":{"qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"}}],"name":"Parameters","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedRef.emit"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.emit"}},{"name":"listenerCount","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"listenerCount","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Returns a number of listeners added to the given event."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"SharedRef.listenerCount"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.listenerCount"}},{"name":"release","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"release","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"A function that detaches the JS and native objects to let the native object deallocate\nbefore the JS object gets deallocated by the JS garbage collector. Any subsequent calls to native\nfunctions of the object will throw an error as it is no longer associated with its native counterpart.\n\nIn most cases, you should never need to use this function, except some specific performance-critical cases when\nmanual memory management makes sense and the native object is known to exclusively retain some native memory\n(such as binary data or image bitmap). Before calling this function, you should ensure that nothing else will use\nthis object later on. Shared objects created by React hooks are usually automatically released in the effect's cleanup phase,\nfor example: "},{"kind":"code","text":"`useVideoPlayer()`"},{"kind":"text","text":" from "},{"kind":"code","text":"`expo-video`"},{"kind":"text","text":" and "},{"kind":"code","text":"`useImage()`"},{"kind":"text","text":" from "},{"kind":"code","text":"`expo-image`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedRef.release"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.release"}},{"name":"removeAllListeners","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeAllListeners","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes all listeners for the given event name."}]},"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"intrinsic","name":"never"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedRef.removeAllListeners"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.removeAllListeners"}},{"name":"removeListener","variant":"declaration","kind":2048,"flags":{"isInherited":true},"signatures":[{"name":"removeListener","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Removes a listener for the given event name."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}},{"name":"listener","variant":"param","kind":32768,"type":{"type":"indexedAccess","indexType":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true},"objectType":{"type":"reference","target":{"qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"never"},{"type":"intrinsic","name":"never"}],"name":"Record","package":"typescript"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedRef.removeListener"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.removeListener"}},{"name":"startObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"startObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the first listener for an event with the given name is added.\nOverride it in a subclass to perform some additional setup once the event started being observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedRef.startObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.startObserving"}},{"name":"stopObserving","variant":"declaration","kind":2048,"flags":{"isOptional":true,"isInherited":true},"signatures":[{"name":"stopObserving","variant":"signature","kind":4096,"flags":{"isInherited":true},"comment":{"summary":[{"kind":"text","text":"Function that is automatically invoked when the last listener for an event with the given name is removed.\nOverride it in a subclass to perform some additional cleanup once the event is no longer observed."}]},"typeParameters":[{"name":"EventName","variant":"typeParam","kind":131072,"type":{"type":"intrinsic","name":"never"}}],"parameters":[{"name":"eventName","variant":"param","kind":32768,"type":{"type":"reference","name":"EventName","package":"expo-modules-core","refersToTypeParameter":true}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"SharedRef.stopObserving"}}],"inheritedFrom":{"type":"reference","name":"SharedRef.stopObserving"}}],"extendedTypes":[{"type":"reference","target":{"qualifiedName":"SharedRef"},"typeArguments":[{"type":"literal","value":"image"}],"name":"SharedRef","package":"expo-modules-core"}]},{"name":"VideoThumbnailsOptions","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"headers","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"In case "},{"kind":"code","text":"`sourceFilename`"},{"kind":"text","text":" is a remote URI, "},{"kind":"code","text":"`headers`"},{"kind":"text","text":" object is passed in a network request."}]},"type":{"type":"reference","target":{"qualifiedName":"Record"},"typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"string"}],"name":"Record","package":"typescript"}},{"name":"quality","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A value in range "},{"kind":"code","text":"`0.0`"},{"kind":"text","text":" - "},{"kind":"code","text":"`1.0`"},{"kind":"text","text":" specifying quality level of the result image. "},{"kind":"code","text":"`1`"},{"kind":"text","text":" means no\ncompression (highest quality) and "},{"kind":"code","text":"`0`"},{"kind":"text","text":" the highest compression (lowest quality)."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"time","variant":"declaration","kind":1024,"flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The time position where the image will be retrieved in ms."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"VideoThumbnailsResult","variant":"declaration","kind":2097152,"type":{"type":"reflection","declaration":{"name":"__type","variant":"declaration","kind":65536,"children":[{"name":"height","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Height of the created image."}]},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"URI to the created image (usable as the source for an Image/Video element)."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"width","variant":"declaration","kind":1024,"comment":{"summary":[{"kind":"text","text":"Width of the created image."}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"getNativeThumbnailAsync","variant":"declaration","kind":64,"signatures":[{"name":"getNativeThumbnailAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Create an image thumbnail and pass the result as a native image reference"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise which fulfills with ['NativeVideoThumbnail'](#nativevideothumbnail)"}]}]},"parameters":[{"name":"sourceFilename","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An URI of the video, local or remote."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A map defining how modified thumbnail should be created."}]},"type":{"type":"reference","name":"VideoThumbnailsOptions","package":"expo-video-thumbnails"},"defaultValue":"{}"}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"union","types":[{"type":"reference","name":"NativeVideoThumbnail","package":"expo-video-thumbnails"},{"type":"literal","value":null}]}],"name":"Promise","package":"typescript"}}]},{"name":"getThumbnailAsync","variant":"declaration","kind":64,"signatures":[{"name":"getThumbnailAsync","variant":"signature","kind":4096,"comment":{"summary":[{"kind":"text","text":"Create an image thumbnail from video provided via "},{"kind":"code","text":"`sourceFilename`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns a promise which fulfils with ["},{"kind":"code","text":"`VideoThumbnailsResult`"},{"kind":"text","text":"](#videothumbnailsresult)."}]}]},"parameters":[{"name":"sourceFilename","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"An URI of the video, local or remote."}]},"type":{"type":"intrinsic","name":"string"}},{"name":"options","variant":"param","kind":32768,"comment":{"summary":[{"kind":"text","text":"A map defining how modified thumbnail should be created."}]},"type":{"type":"reference","name":"VideoThumbnailsOptions","package":"expo-video-thumbnails"},"defaultValue":"{}"}],"type":{"type":"reference","target":{"qualifiedName":"Promise"},"typeArguments":[{"type":"reference","name":"VideoThumbnailsResult","package":"expo-video-thumbnails"}],"name":"Promise","package":"typescript"}}]}],"packageName":"expo-video-thumbnails"}